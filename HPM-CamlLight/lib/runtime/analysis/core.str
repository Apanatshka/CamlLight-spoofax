module runtime/analysis/core

imports
	
  runtime/nbl/collect
  runtime/nbl/incremental
  runtime/nbl/entries
  runtime/nbl/uri
  runtime/nbl/utils
  runtime/index/core
  runtime/task/core
  runtime/task/messages
  runtime/editor/origins
  
signature

  constructors
  
    File        : Path * AST -> File
    
    // Result(partition, initial-ast, analyzed-ast, changed-read*, error*, warning*, note*)
    Result      : Partition * AST * AST * List(URI) * List(Term) * List(Term) * List(Term) -> Result
    
    // DebugResult(removed-entry*, added-entry*, removed-task*, added-task*, invalidated-task*)
    DebugResult : List(Entry) * List(Entry) * List(TaskID) * List(TaskID) * List(TaskID) -> Result
    
rules // Analysis
	
	analyze-collect(|language, project-path) = analyze-collect(id|language, project-path)
	analyze-collect(try-recover|language, project-path):
    File(partition, initial-ast) -> ( 
    	Result(partition, initial-ast, analyzed-ast, changed-read*, [], [], [])
    , DebugResult(<length> removed-entry*, <length> added-entry*, <length> removed-task*, <length> added-task*, <length> invalidated-task*)
  	)
    with
    	<analysis-core-debug(!"Collecting: ")> partition;
    	measure-time(
	    	measure-time(
	    		index-setup(|language, project-path);
	    		try(try-recover; index-recover);
			    index-start-collection(|partition);
	    		task-setup(|project-path);
	    		try(try-recover; task-recover);
	    		task-start-collection(|partition)
	      	, analysis-core-debug-time(!"Time - setup: ") | "analyze-collect-setup"
	      ); measure-time(
	      	analyzed-ast := <nabl-collect(|partition, Language(language))> initial-ast
	    	  , analysis-core-debug-time(!"Time - collect: ") | "analyze-collect-collect" 
	  	  ); measure-time(
	  	  	index-stop-collection => (removed-entry*, added-entry*);
	      	task-stop-collection(|partition) => (removed-task*, added-task*);
	      	changed-read* := <nabl-get-changed-reads> [removed-entry*, added-entry*]
	      	, analysis-core-debug-time(!"Time - diff: ") | "analyze-collect-diff" 
	  	  ); measure-time(
	  	  	task-invalidate-task-reads(|changed-read*) => invalidated-task*
	  	  	, analysis-core-debug-time(!"Time - invalidate: ") | "analyze-collect-invalidate"
	  	  )
  	  , id | "analyze-collect-total")
	
	analyze-perform-all:
		result* -> (result'*, evaluated-task*, skipped-task*, unevaluated-task*)
		with
			measure-time(
				measure-time(
	      	task-evaluate-scheduled => (evaluated-task*, skipped-task*, unevaluated-task*)
	      	, analysis-core-debug-time(!"Time - evaluation: ") | "analyze-task-evaluate"
	      ); measure-time(
	  	  	result'* := <map(analyze-messages)> result*
	  	  	, analysis-core-debug-time(!"Time - messages: ") | "analyze-task-messages"
	  	  )
  	, id | "analyze-task-total")
  	  
    
  analyze-messages:
  	(Result(partition, initial-ast, analyzed-ast, changed-read*, _, _, _), debug-result) -> 
  	(Result(partition, initial-ast, analyzed-ast, changed-read*, error*, warning*, note*), debug-result)
  	with
			(error*, warning*, note*) := <analyze-get-messages> partition

	analyze-get-messages:
		partition -> (error*, warning*, note*)
		with
  		message* := <task-get-messages(|partition)>;
  		error*   := <filter(?Error(_, _, _); analyze-message-to-tuple)> message*;
  		warning* := <filter(?Warning(_, _, _); analyze-message-to-tuple)> message*;
  		note*    := <filter(?Note(_, _, _); analyze-message-to-tuple)> message*
  		
	analyze-message-to-tuple:
		message -> (<origin-location-offset-set(|origin)> term, msg)
		with
			origin := <task-message-origin> message;
			term   := <task-message-term> message;
			msg    := <task-message> message
      
rules // Projections
	
	analyze-result-reads:
		Result(_, _, _, changed-read*, _, _, _) -> changed-read*
		
	analyze-result-analyzed-ast:
		Result(_, _, analyzed-ast, _, _, _, _) -> analyzed-ast

	analysis-partition(|path, project-path) = !$[[project-path]/[path]]

rules // Debugging
	
	analysis-core-debug(msg) = try(analysis-core-debug-interface(msg))
	analysis-core-debug = try(analysis-core-debug-interface)
	analysis-core-debug-interface(msg) = fail
	analysis-core-debug-interface = fail
	
	analysis-core-debug-time(msg) = try(analysis-core-debug-time-interface(msg))
	analysis-core-debug-time = try(analysis-core-debug-time-interface)
	analysis-core-debug-time-interface(msg) = fail
	analysis-core-debug-time-interface = fail
	
