module runtime/analysis/multiple

imports

  runtime/analysis/core
  runtime/task/core
  runtime/nbl/utils

rules // Multi file analysis
  
  analyze-multiple(parse-file, complete-work-unit|language, project-path):
    path* -> result*
    with
    	measure-time(
      	file* := <map(analyze-parse-file(parse-file); where(complete-work-unit))> path*
    	, id | "analyze-parse");
      result* := <analyze-multiple-files(complete-work-unit|language, project-path)> file*

  analyze-parse-file(parse-file):
    path -> File(path, ast)
    with
      if not(ast := <file-exists; parse-file> path) then
        ast := ()
      end

  analyze-multiple-files(complete-work-unit|language, project-path):
    file* -> (result'*, evaluated-task*, skipped-task*, unevaluated-task*)
    with
      result* := <map(analyze-collect(|language, project-path); where(complete-work-unit))> file*;
    	(result'*, evaluated-task*, skipped-task*, unevaluated-task*) := <analyze-perform-all> result*
      
